name: Terraform Plan

on:
  workflow_call:
    inputs:
      working-directory:
        type: string
        required: false
        default: tf
    secrets:
      aws-id:
        required: true
      aws-secret:
        required: true
      git-read-key:
        required: true

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-id }}
          aws-secret-access-key: ${{ secrets.aws-secret }}
          aws-region: eu-central-1

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.git-read-key }}

      - uses: hashicorp/setup-terraform@v1

      - name: Terraform Fmt
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true
        working-directory: ${{ inputs.working-directory }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ inputs.working-directory }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ${{ inputs.working-directory }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
        working-directory: ${{ inputs.working-directory }}

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outcome }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
